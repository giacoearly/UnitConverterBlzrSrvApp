@page "/"
@using UnitConverterBlzrSrv.Data
@using UnitConverterBlzrSrv.Pages
@inject IDistanceConverter DistanceConverterService

<h3>Distance Converter</h3>

<div class="row">
    <div class="col">
        <div class="input-group mb-3">
            <input class="form-control" @bind="miles" placeholder="Enter miles">
            <div class="input-group-append">
                <span class="input-group-text">Miles</span>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="input-group mb-3">
            <input class="form-control" @bind="kilometers" placeholder="Enter kilometers">
            <div class="input-group-append">
                <span class="input-group-text">Kilometers</span>
            </div>
        </div>
    </div>
</div>

<div class="row mb-3">
    <div class="col">
        <button class="btn btn-outline-primary" @onclick="ConvertMilesToKilometers">Convert Miles to Kilometers</button>
    </div>
    <div class="col">
        <button class="btn btn-outline-primary" @onclick="ConvertKilometersToMiles">Convert Kilometers to Miles</button>
    </div>
</div>

@if (converted)
{
    <div class="alert alert-success mt-3" role="alert">
        @result
    </div>
}

<h3>Feet to Meters and Meters to Feet Converter</h3>

<div class="row mb-3">
    <div class="col">
        <div class="input-group mb-3">
            <input id="feetInput" class="form-control" @bind="feet" placeholder="Enter feet" />
            <div class="input-group-append">
                <span class="input-group-text">Feet</span>
            </div>
        </div>
        <button class="btn btn-outline-primary mt-2" @onclick="ConvertFeetToMeters">Convert to Meters</button>
    </div>
    <div class="col">
        <div class="input-group mb-3">
            <input id="inchesInput" class="form-control" @bind="inches" placeholder="Enter inches" />
            <div class="input-group-append">
                <span class="input-group-text">Inches</span>
            </div>
        </div>
        <button class="btn btn-outline-primary mt-2" @onclick="AddInchesToFeetAndConvertToMeters">Add to Feet and Convert to Meters</button>
    </div>
    <div class="col">
        <div class="input-group mb-3">
            <input id="metersInput" class="form-control" @bind="meters" placeholder="Enter meters" />
            <div class="input-group-append">
                <span class="input-group-text">Meters</span>
            </div>
        </div>
        <button class="btn btn-outline-primary mt-2" @onclick="ConvertMetersToFeet">Convert to Feet</button>
    </div>
</div>

<div class="mb-3">
    <p>@feet feet plus @inches inches is equivalent to @meters meters.</p>
</div>

<h3>Meters to Feet and Inches Converter</h3>

<div class="row mb-3">
    <div class="col">
        <div class="input-group mb-3">
            <input id="metersInput" class="form-control" @bind="meters" placeholder="Enter meters" />
            <div class="input-group-append">
                <span class="input-group-text">Meters</span>
            </div>
        </div>
        <button class="btn btn-outline-primary mt-2" @onclick="ConvertMetersToFeetAndInches">Convert to Feet and Inches</button>
    </div>
</div>

<div class="mb-3">
    <p>@meters meters is equivalent to @feet feet and @inches inches.</p>
</div>

@code {
    private string? miles = string.Empty;
    private string? kilometers = string.Empty;
    private string? result = string.Empty;
    private bool converted;

    private string feet = string.Empty;
    private string inches = string.Empty;
    private string meters = string.Empty;

    public void ConvertMilesToKilometers()
    {
        if (double.TryParse(miles, out var milesValue))
        {
            kilometers = DistanceConverterService.MilesToKilometers(milesValue).ToString();
            result = $"{miles} miles is equal to {kilometers} kilometers.";
            converted = true;
        }
    }

    public void ConvertKilometersToMiles()
    {
        if (double.TryParse(kilometers, out var kilometersValue))
        {
            miles = DistanceConverterService.KilometersToMiles(kilometersValue).ToString();
            result = $"{kilometers} kilometers is equal to {miles} miles.";
            converted = true;
        }
    }

    private void ConvertFeetToMeters()
    {
        if (double.TryParse(feet, out var feetValue))
        {
            meters = Math.Round(feetValue * 0.3048, 4).ToString();
        }
    }

    private void ConvertMetersToFeet()
    {
        if (double.TryParse(meters, out var metersValue))
        {
            feet = Math.Round(metersValue / 0.3048, 4).ToString();
        }
    }

    private void AddInchesToFeetAndConvertToMeters()
    {
        if (double.TryParse(inches, out var inchesValue) && double.TryParse(feet, out var feetValue))
        {
            double totalInches = (feetValue * 12) + inchesValue;
            meters = Math.Round(totalInches * 0.0254, 4).ToString();
        }
    }

    private void ConvertMetersToFeetAndInches()
    {
        if (double.TryParse(meters, out var metersValue))
        {
            double feetValue = Math.Floor(metersValue / 0.3048);
            feet = feetValue.ToString();
            double remainingMeters = metersValue - (feetValue * 0.3048);
            double inchesValue = Math.Round(remainingMeters / 0.0254, 4);
            inches = inchesValue.ToString();
        }
    }
}

<h3>Yard to Meter Converter</h3>

<div class="row mb-3">
    <div class="col">
        <div class="input-group mb-3">
            <input type="text" class="form-control" @bind="yards" placeholder="Enter yards" />
            <div class="input-group-append">
                <span class="input-group-text">Yards</span>
            </div>
        </div>
        <button class="btn btn-outline-primary mt-2" @onclick="ConvertYardsToMeters">Convert to Meters</button>
    </div>
    <div class="col">
        <div class="input-group mb-3">
            <input type="text" class="form-control" @bind="meters_y" placeholder="Enter meters" />
            <div class="input-group-append">
                <span class="input-group-text">Meters</span>
            </div>
        </div>
        <button class="btn btn-outline-primary mt-2" @onclick="ConvertMetersToYards">Convert to Yards</button>
    </div>
</div>

@if (!string.IsNullOrEmpty(conversionResult))
{
    <div class="alert alert-success mt-3" role="alert">
        @conversionResult
    </div>
}

@code {
    private string yards = string.Empty;
    private string meters_y = string.Empty;
    private string conversionResult = string.Empty;

    private void ConvertYardsToMeters()
    {
        if (double.TryParse(yards, out var yardValue))
        {
            var meterValue = yardValue * 0.9144;
            meters_y = meterValue.ToString("F4");
            conversionResult = $"{yards} yards is equal to {meters} meters.";
        }
    }

    private void ConvertMetersToYards()
    {
        if (double.TryParse(meters_y, out var meterValue))
        {
            var yardValue = meterValue / 0.9144;
            yards = yardValue.ToString("F4");
            conversionResult = $"{meters} meters is equal to {yards} yards.";
        }
    }
}
